<?xml version="1.0" encoding="UTF-8"?>
<proxy name="CountriesService" startOnLoad="true" transports="http https" xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence>
            <property description="MsgOperation" expression="local-name($body/*)" name="MsgOperation" scope="default" type="STRING"/>
            <log description="Message and Operation" level="custom">
                <property expression="$body" name="*** Received message"/>
                <property expression="get-property('MsgOperation')" name="*** Operation ***"/>
            </log>
            <switch source="get-property('MsgOperation')">
                <case regex="countryCodeRequest">
                    <call-template description="ValidateMessage" target="ValidateMessageTemplate">
                        <with-param name="schemadef" value="gov:/qualogy/countryservice/xsd/CountryCode.xsd"/>
                    </call-template>
                    <property description="requestValue" expression="$body/code:countryCodeRequest/code:code" name="requestValue" scope="default" type="STRING" xmlns:code="http://wso2.qualogy.com/country/code"/>
                    <property description="uri.var.queryparam" expression="fn:concat('alpha?codes=',get-property('requestValue'))" name="uri.var.queryparam" scope="default" type="STRING"/>
                    <log description="variable part of endpoint uri" level="custom">
                        <property expression="get-property('requestValue')" name="*** code"/>
                        <property expression="get-property('uri.var.queryparam')" name="*** uri.var.queryparam"/>
                    </log>
                </case>
                <case regex="countryNameRequest">
                    <call-template description="Validate Message" target="ValidateMessageTemplate">
                        <with-param name="schemadef" value="gov:/qualogy/countryservice/xsd/CountryName.xsd"/>
                    </call-template>
                    <property description="requestValue" expression="$body/name:countryNameRequest/name:name" name="requestValue" scope="default" type="STRING" xmlns:name="http://wso2.qualogy.com/country/name"/>
                    <property description="requestValueFullText" expression="$body/name:countryNameRequest/name:fulltext" name="fullText" scope="default" type="STRING" xmlns:name="http://wso2.qualogy.com/country/name"/>
                    <filter description="isFulltext" regex="true" source="get-property('fullText')">
                        <then>
                            <property description="uri.var.queryparam with fulltext" expression="fn:concat('name/',get-property('requestValue'),'?fullText=true')" name="uri.var.queryparam" scope="default" type="STRING"/>
                        </then>
                        <else>
                            <property description="uri.var.queryparam without fulltext" expression="fn:concat('name/',get-property('requestValue'))" name="uri.var.queryparam" scope="default" type="STRING"/>
                        </else>
                    </filter>
                    <log description="variable part of endpoint uri" level="custom">
                        <property expression="get-property('requestValue')" name="*** name"/>
                        <property expression="get-property('uri.var.queryparam')" name="*** uri.var.queryparam"/>
                    </log>
                </case>
                <case regex="countryCurrencyRequest">
                    <call-template description="ValidateMessage" target="ValidateMessageTemplate">
                        <with-param name="schemadef" value="gov:/qualogy/countryservice/xsd/CountryCurrency.xsd"/>
                    </call-template>
                    <property description="requestValue" expression="$body/curr:countryCurrencyRequest/curr:currency" name="requestValue" scope="default" type="STRING" xmlns:curr="http://wso2.qualogy.com/country/currency"/>
                    <property description="uri.var.queryparam" expression="fn:concat('currency/',get-property('requestValue'))" name="uri.var.queryparam" scope="default" type="STRING"/>
                    <log description="variable part of endpoint uri" level="custom">
                        <property expression="get-property('requestValue')" name="*** curr"/>
                        <property expression="get-property('uri.var.queryparam')" name="*** uri.var.queryparam"/>
                    </log>
                </case>
                <case regex="countryCallingCodeRequest">
                    <call-template description="ValidateMessage" target="ValidateMessageTemplate">
                        <with-param name="schemadef" value="gov:/qualogy/countryservice/xsd/CountryCallingCode.xsd"/>
                    </call-template>
                    <property description="requestValue" expression="$body/callcode:countryCallingCodeRequest/callcode:callingcode" name="requestValue" scope="default" type="STRING" xmlns:callcode="http://wso2.qualogy.com/country/callingcode"/>
                    <property description="uri.var.queryparam" expression="fn:concat('callingcode/',get-property('requestValue'))" name="uri.var.queryparam" scope="default" type="STRING"/>
                    <log description="variable part of endpoint uri" level="custom">
                        <property expression="get-property('requestValue')" name="*** callcode"/>
                        <property expression="get-property('uri.var.queryparam')" name="*** uri.var.queryparam"/>
                    </log>
                </case>
                <default>
                    <log category="ERROR" description="Log eror message" level="custom">
                        <property expression="fn:concat('Operation ',get-property('MsgOperation'),' not valid.')" name="Operation: "/>
                    </log>
                    <call-template description="construct and send errormessage to the client" target="ReturnErrorTemplate">
                        <with-param name="errorCode" value="Server:InvalidOperationError"/>
                        <with-param name="errorMessage" value="Invalid operation"/>
                    </call-template>
                    <drop description="drop the orignal message"/>
                </default>
            </switch>
            <property action="remove" description="Remove Accept-Encoding header" name="Accept-Encoding" scope="transport"/>
            <property description="Set Accept header" name="Accept" scope="transport" type="STRING" value="application/json"/>
            <send description="Send the message using a named endpoint">
                <endpoint key="RestCountriesEP"/>
            </send>
        </inSequence>
        <outSequence>
            <!-- Workaround for serialization bug after changing content-type: ref: https://github.com/wso2/product-ei/issues/3718  -->
            <!-- Translate response using xslt -->
            <property description="JsonElement" expression="$body/jsonArray/jsonElement/name" name="record" scope="default" type="STRING"/>
            <filter description="Test Xpath in response" regex="true" source="boolean(get-property('record'))">
                <then>
                    <xslt description="Transform response xml message" key="gov:/qualogy/countryservice/xslt/CountriesResponse.xslt"/>
                    <send description="Send transformed message back to the client"/>
                </then>
                <else>
                    <call-template target="ReturnErrorTemplate">
                        <with-param name="errorCode" value="Server:InvalidResponseMessage"/>
                        <with-param name="errorMessage" value="Invalid responsemessage received"/>
                    </call-template>
                </else>
            </filter>
        </outSequence>
        <faultSequence>
            <send/>
        </faultSequence>
    </target>
</proxy>
